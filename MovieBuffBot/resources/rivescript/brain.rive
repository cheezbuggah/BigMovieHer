// brain.rive

+ hello
- Hi there!

+ how are you
- I'm fine.
- Splendid!
- Couldn't be better!

+ my name is *
- <set name=<formal>>How nice to meet you, <formal> i shall remember your name human.
- <set name=<formal>>Hi, <formal>, my name is <bot name>.
- <set name=<formal>><formal>, what an odd name.

+ (what is my name|who am i|do you know my name|do you know who i am){weight=10}
- Your name is <get name>.
- You told me your name is <get name>.
- Aren't you <get name>?

+what's the meaning of life
-42

+ [*] start [*]
- I'm Movie Buff bot! Ask me questions about your favorite movies. Type /help for some example questions.

+ [*] help [*]
- You can ask me questions like:\n
^ In how many movies do Simon Pegg and Nick frost play together?\n
^ how many episodes are there of monty pythons flying circus?\n
^ how many times is Joop Braakhekke credited?\n
^ how many movies have a differing international title from the english title?\n
^ what is the least occuring genre before 1950?\n
^ what is the shortest movie with a rating above 8?\n
^ what is the series with the most episodes?\n
^ how many people from the classical era are credited?\n
^ give an example of a movie with the name adventure in the title?\n
^ what are ten times that christopher nolan was credited without hans zimmer?\n
^ how many times does a number appear in the title\n
^ what is the distribution of jobs in the movie business\n

+ *
- Not sure I got that. Type /help for some example questions.




+in how many movies do simon pegg and nick frost play together
-<call>jdbc localhost 3306 bigmovieher root admin SELECT count(*) FROM (SELECT count(title_id) FROM (Select distinct title_id, name_id FROM bigmovieher.principal WHERE name_id IN (Select id FROM bigmovieher.name WHERE primaryName LIKE "Simon Pegg") union Select distinct title_id, name_id FROM bigmovieher.principal WHERE name_id IN(Select id FROM bigmovieher.name WHERE primaryName LIKE "Nick Frost") ) AS duo GROUP BY title_id HAVING count(title_id) >= 2) as stuff</call>

+how many episodes are there of monty pythons flying circus
-<call>jdbc localhost 3306 bigmovieher root admin Select count(*) FROM bigmovieher.episode WHERE parentTconst IN ( Select id FROM bigmovieher.title WHERE title.primaryTitle LIKE "Monty Python's Flying Circus")</call>

+how many times is joop braakhekke credited?
-<call>jdbc localhost 3306 bigmovieher root admin SELECT Count(*) FROM bigmovieher.principal WHERE principal.name_id IN (Select id FROM bigmovieher.name WHERE name.primaryName Like "Joop Braakhekke")</call>

+how many movies have a differing international title from the english title
-<call>jdbc localhost 3306 bigmovieher root admin SELECT count(*) FROM bigmovieher.title WHERE primaryTitle!=originalTitle;</call>

+what is the least occuring genre before 1950
-<call>jdbc localhost 3306 bigmovieher root admin SELECT genre.name FROM bigmovieher.genre WHERE genre.title_id IN (Select id FROM bigmovieher.title WHERE startYear < 1950 AND startYear > 1000) GROUP BY genre.name ORDER BY count(genre.name) ASC limit 1</call>

+what is the shortest movie with a rating above 8
-<call>jdbc localhost 3306 bigmovieher root admin SELECT title.primaryTitle FROM bigmovieher.title WHERE title.id in (SELECT rating.title_id FROM bigmovieher.rating where rating.averageRating >= 0.8) and title.runtimeMinutes <> 0 order by title.runtimeMinutes ASC limit 1</call>

+what is the series with the most episodes
-<call>jdbc localhost 3306 bigmovieher root admin Select title.primaryTitle, " met ", epselect.PTC, " afleveringen" FROM(SELECT DISTINCT parentTconst, count(parentTconst) AS PTC FROM bigmovieher.episode group by parentTconst order by PTC  DESC limit 1) AS epselect INNER JOIN bigmovieher.title ON title.id = epselect.parentTconst;</call>

+give an example of a movie with the name adventure in the title
-<call>jdbc localhost 3306 bigmovieher root admin SELECT PrimaryTitle FROM bigmovieher.title WHERE primaryTitle LIKE "%adventure%" LIMIT 1;</call>

+how many people from the classical era are credited
-<call>jdbc localhost 3306 bigmovieher root admin select primaryName, " geboren op ", birthYear FROM bigmovieher.name WHERE birthYear <> 0 AND birthYear < 500 order by name.birthYear asc;</call>

+what are ten times that christopher nolan was credited without hans zimmer
-<call>jdbc localhost 3306 bigmovieher root admin SELECT distinct title.primaryTitle, " " FROM(Select distinct title_id FROM bigmovieher.principal WHERE name_id IN (Select name.id FROM bigmovieher.name WHERE primaryName LIKE "Christopher Nolan") )waltz INNER JOIN bigmovieher.title on waltz.title_id = title.id WHERE NOT waltz.title_id IN (Select distinct title_id FROM bigmovieher.principal WHERE name_id IN(Select name.id FROM bigmovieher.name WHERE primaryName LIKE "Hans Zimmer"))LIMIT 10;</call>

+how many times does a number appear in the title
- Here it is!<call>system C:/Users/Emiel/Git/BigMovieHer/MovieBuffBot/resources/R/numbers.R</call>
^<call>send photo C:/Users/Emiel/Git/BigMovieHer/MovieBuffBot/resources/tmp/numberTitles.jpeg The graph produced by R</call>

+what is the distribution of jobs in the movie business
- Here it is!<call>system C:/Users/Emiel/Git/BigMovieHer/MovieBuffBot/resources/R/professionPie.R</call>
^<call>send photo C:/Users/Emiel/Git/BigMovieHer/MovieBuffBot/resources/tmp/professionPie.png The graph produced by R</call>


// Substitutions
! sub i'm     = i am
! sub i'd     = i would
! sub i've    = i have
! sub i'll    = i will
! sub don't   = do not
! sub isn't   = is not
! sub you'd   = you would
! sub you're  = you are
! sub you've  = you have
! sub you'll  = you will
! sub what's  = what is
! sub whats   = what is
! sub what're = what are
! sub what've = what have
! sub what'll = what will
! sub who's   = who is
