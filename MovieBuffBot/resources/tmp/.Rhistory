library(ggplot2)
library(ggrepel)
library(scales)
library(plotly)
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
professionCount <- dbGetQuery("SELECT profession, count(profession) FROM bigmovieher.name_profession WHERE profession NOT LIKE \"\" GROUP BY profession HAVING count(profession) > 2 ORDER BY count(profession) desc")
#get the names and slices as a separate variable
lbls <- professionCount[,2]
slices <- professionCount[,1]
bp <- ggplot(professionCount, aes(x="", y=slices, fill=lbls)) + geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start = 0)
lblsp <- percent(slices/sum(slices))
pieFinal <- pie + geom_text(aes(label = percent(lblsp), size = 1)
pieFinal
#wght = runif(length(slices))
#wght = wght/sum(slices)
#wght = round(wght, digits = 2)
#alloc = as.data.frame(cbind(slices, wght))
#alloc$wght = as.numeric(as.character(alloc$wght))
#ggpie <- function(dat, by, totals)
#ggplot(dat, aes_string(1, ))
#install.packages("RMySQL")
#install.packages("plotrix")
#Wat is de verdeling van de verschillende soorten beroepen die met films te maken hebben? Laat dit zien in een pie chart
#"Welke beroepen zijn er in de film business?"
library(RMySQL)
library(ggplot2)
library(ggrepel)
library(scales)
library(plotly)
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
professionCount <- dbGetQuery("SELECT profession, count(profession) FROM bigmovieher.name_profession WHERE profession NOT LIKE \"\" GROUP BY profession HAVING count(profession) > 2 ORDER BY count(profession) desc")
#get the names and slices as a separate variable
lbls <- professionCount[,2]
slices <- professionCount[,1]
bp <- ggplot(professionCount, aes(x="", y=slices, fill=lbls)) + geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start = 0)
lblsp <- percent(slices/sum(slices))
pieFinal <- pie + geom_text(aes(label = percent(lblsp), size = 1)
pieFinal
#wght = runif(length(slices))
#wght = wght/sum(slices)
#wght = round(wght, digits = 2)
#alloc = as.data.frame(cbind(slices, wght))
#alloc$wght = as.numeric(as.character(alloc$wght))
#ggpie <- function(dat, by, totals)
#ggplot(dat, aes_string(1, ))
#install.packages("RMySQL")
#install.packages("plotrix")
#Wat is de verdeling van de verschillende soorten beroepen die met films te maken hebben? Laat dit zien in een pie chart
#"Welke beroepen zijn er in de film business?"
library(RMySQL)
library(ggplot2)
library(ggrepel)
library(scales)
library(plotly)
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
professionCount <- dbGetQuery("SELECT profession, count(profession) FROM bigmovieher.name_profession WHERE profession NOT LIKE \"\" GROUP BY profession HAVING count(profession) > 2 ORDER BY count(profession) desc")
#get the names and slices as a separate variable
lbls <- professionCount[,2]
slices <- professionCount[,1]
bp <- ggplot(professionCount, aes(x="", y=slices, fill=lbls)) + geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start = 0)
lblsp <- percent(slices/sum(slices))
pieFinal <- pie + geom_text(aes(label = percent(lblsp), size = 1)
pieFinal
#wght = runif(length(slices))
#wght = wght/sum(slices)
#wght = round(wght, digits = 2)
#alloc = as.data.frame(cbind(slices, wght))
#alloc$wght = as.numeric(as.character(alloc$wght))
#ggpie <- function(dat, by, totals)
#ggplot(dat, aes_string(1, ))
#install.packages("RMySQL")
#install.packages("plotrix")
#Wat is de verdeling van de verschillende soorten beroepen die met films te maken hebben? Laat dit zien in een pie chart
#"Welke beroepen zijn er in de film business?"
library(RMySQL)
library(ggplot2)
library(ggrepel)
library(scales)
library(plotly)
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
professionCount <- dbGetQuery("SELECT profession, count(profession) FROM bigmovieher.name_profession WHERE profession NOT LIKE \"\" GROUP BY profession HAVING count(profession) > 2 ORDER BY count(profession) desc")
#get the names and slices as a separate variable
lbls <- professionCount[,2]
slices <- professionCount[,1]
bp <- ggplot(professionCount, aes(x="", y=slices, fill=lbls)) + geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start = 0)
lblsp <- percent(slices/sum(slices))
pieFinal <- pie + geom_text(aes(label = percent(lblsp), size = 1)
pieFinal
#wght = runif(length(slices))
#wght = wght/sum(slices)
#wght = round(wght, digits = 2)
#alloc = as.data.frame(cbind(slices, wght))
#alloc$wght = as.numeric(as.character(alloc$wght))
#ggpie <- function(dat, by, totals)
#ggplot(dat, aes_string(1, ))
#install.packages("RMySQL")
#install.packages("plotrix")
#Wat is de verdeling van de verschillende soorten beroepen die met films te maken hebben? Laat dit zien in een pie chart
#"Welke beroepen zijn er in de film business?"
library(RMySQL)
library(ggplot2)
library(ggrepel)
library(scales)
library(plotly)
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
professionCount <- dbGetQuery("SELECT profession, count(profession) FROM bigmovieher.name_profession WHERE profession NOT LIKE \"\" GROUP BY profession HAVING count(profession) > 2 ORDER BY count(profession) desc")
#get the names and slices as a separate variable
lbls <- professionCount[,2]
slices <- professionCount[,1]
bp <- ggplot(professionCount, aes(x="", y=slices, fill=lbls)) + geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start = 0)
lblsp <- percent(slices/sum(slices))
pieFinal <- pie + geom_text(aes(label = percent(lblsp), size = 1))
pieHope <- ggplot(transform(transform(professionCount, slices=slices/sum(slices)), labPos=cumsum(slices) - slices/2),
aes(x="", y=slices, fill = lbls)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
geom_text(aes(y=labPos, label=scales::percent(slices)))
pieHope
#wght = runif(length(slices))
#wght = wght/sum(slices)
#wght = round(wght, digits = 2)
#alloc = as.data.frame(cbind(slices, wght))
#alloc$wght = as.numeric(as.character(alloc$wght))
#ggpie <- function(dat, by, totals)
#ggplot(dat, aes_string(1, ))
#install.packages("RMySQL")
#install.packages("plotrix")
#Wat is de verdeling van de verschillende soorten beroepen die met films te maken hebben? Laat dit zien in een pie chart
#"Welke beroepen zijn er in de film business?"
library(RMySQL)
library(ggplot2)
library(ggrepel)
library(scales)
library(plotly)
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
professionCount <- dbGetQuery("SELECT profession, count(profession) FROM bigmovieher.name_profession WHERE profession NOT LIKE \"\" GROUP BY profession HAVING count(profession) > 2 ORDER BY count(profession) desc")
#get the names and slices as a separate variable
lbls <- professionCount[,2]
slices <- professionCount[,1]
bp <- ggplot(professionCount, aes(x="", y=slices, fill=lbls)) + geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start = 0)
lblsp <- percent(slices/sum(slices))
pieFinal <- pie + geom_text(aes(label = percent(lblsp), size = 1))
pieHope <- ggplot(transform(transform(professionCount, slices=slices/sum(slices)), labPos=cumsum(slices) - slices/2),
aes(x="", y=slices, fill = lbls)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y")
pieHope
#wght = runif(length(slices))
#wght = wght/sum(slices)
#wght = round(wght, digits = 2)
#alloc = as.data.frame(cbind(slices, wght))
#alloc$wght = as.numeric(as.character(alloc$wght))
#ggpie <- function(dat, by, totals)
#ggplot(dat, aes_string(1, ))
#install.packages("RMySQL")
#install.packages("plotrix")
#Wat is de verdeling van de verschillende soorten beroepen die met films te maken hebben? Laat dit zien in een pie chart
#"Welke beroepen zijn er in de film business?"
library(RMySQL)
library(ggplot2)
library(ggrepel)
library(scales)
library(plotly)
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
professionCount <- dbGetQuery("SELECT profession, count(profession) FROM bigmovieher.name_profession WHERE profession NOT LIKE \"\" GROUP BY profession HAVING count(profession) > 2 ORDER BY count(profession) desc")
#get the names and slices as a separate variable
lbls <- professionCount[,2]
slices <- professionCount[,1]
bp <- ggplot(professionCount, aes(x="", y=slices, fill=lbls)) + geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start = 0)
pie
#wght = runif(length(slices))
#wght = wght/sum(slices)
#wght = round(wght, digits = 2)
#alloc = as.data.frame(cbind(slices, wght))
#alloc$wght = as.numeric(as.character(alloc$wght))
#ggpie <- function(dat, by, totals)
#ggplot(dat, aes_string(1, ))
#install.packages("RMySQL")
#install.packages("plotrix")
#Wat is de verdeling van de verschillende soorten beroepen die met films te maken hebben? Laat dit zien in een pie chart
#"Welke beroepen zijn er in de film business?"
library(RMySQL)
library(ggplot2)
library(ggrepel)
library(scales)
library(plotly)
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
professionCount <- dbGetQuery("SELECT profession, count(profession) FROM bigmovieher.name_profession WHERE profession NOT LIKE \"\" GROUP BY profession HAVING count(profession) > 2 ORDER BY count(profession) desc")
#get the names and slices as a separate variable
lbls <- professionCount[,2]
slices <- professionCount[,1]
bp <- ggplot(professionCount, aes(x="", y=slices, fill=lbls)) + geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start = 0)
pie + geom_bar(stat = "identity", color = "black") + guides(fill=guide_legend(override.aes = list(colour=NA)))
#wght = runif(length(slices))
#wght = wght/sum(slices)
#wght = round(wght, digits = 2)
#alloc = as.data.frame(cbind(slices, wght))
#alloc$wght = as.numeric(as.character(alloc$wght))
#ggpie <- function(dat, by, totals)
#ggplot(dat, aes_string(1, ))
#install.packages("RMySQL")
#install.packages("plotrix")
#Wat is de verdeling van de verschillende soorten beroepen die met films te maken hebben? Laat dit zien in een pie chart
#"Welke beroepen zijn er in de film business?"
library(RMySQL)
library(ggplot2)
library(ggrepel)
library(scales)
library(plotly)
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
professionCount <- dbGetQuery("SELECT profession, count(profession) FROM bigmovieher.name_profession WHERE profession NOT LIKE \"\" GROUP BY profession HAVING count(profession) > 2 ORDER BY count(profession) desc")
#get the names and slices as a separate variable
lbls <- professionCount[,2]
slices <- professionCount[,1]
bp <- ggplot(professionCount, aes(x="", y=slices, fill=lbls)) + geom_bar(width = 1, stat = "identity") + ggtitle("Professions in the movie business")
pie <- bp + coord_polar("y", start = 0)
pie + geom_bar(stat = "identity", color = 'black') + guides(fill=guide_legend(override.aes = list(colour=NA)))
#wght = runif(length(slices))
#wght = wght/sum(slices)
#wght = round(wght, digits = 2)
#alloc = as.data.frame(cbind(slices, wght))
#alloc$wght = as.numeric(as.character(alloc$wght))
#ggpie <- function(dat, by, totals)
#ggplot(dat, aes_string(1, ))
#install.packages("RMySQL")
#install.packages("plotrix")
#Wat is de verdeling van de verschillende soorten beroepen die met films te maken hebben? Laat dit zien in een pie chart
#"Welke beroepen zijn er in de film business?"
library(RMySQL)
library(ggplot2)
library(ggrepel)
library(scales)
library(plotly)
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
professionCount <- dbGetQuery("SELECT profession, count(profession) FROM bigmovieher.name_profession WHERE profession NOT LIKE \"\" GROUP BY profession HAVING count(profession) > 2 ORDER BY count(profession) desc")
#get the names and slices as a separate variable
lbls <- professionCount[,2]
slices <- professionCount[,1]
bp <- ggplot(professionCount, aes(x="", y=slices, fill=lbls)) + geom_bar(width = 1, stat = "identity") + ggtitle("Professions in the movie business")
pie <- bp + coord_polar("y", start = 0)
png(filename = "professionPie.png")
pie + geom_bar(stat = "identity", color = 'black') + guides(fill=guide_legend(override.aes = list(colour=NA)))
dev.off()
#wght = runif(length(slices))
#wght = wght/sum(slices)
#wght = round(wght, digits = 2)
#alloc = as.data.frame(cbind(slices, wght))
#alloc$wght = as.numeric(as.character(alloc$wght))
#ggpie <- function(dat, by, totals)
#ggplot(dat, aes_string(1, ))
ggsave(filename = "C:/Users/Emiel/Git/BigMovieHer/MovieBuffBot/tmp/numbersTitles.jpeg")
# install.packages("stringr")
# install.packages("ggplot2")
library(RMySQL)
library(ggplot2)
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
b <- "'% "
e <- " %'"
numbername <- c("One","Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine")
#Add values of query to name
for (n in c("One","Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine" )){
ns <- paste0(b, n, e)
cn <- dbGetQuery(con, sprintf("SELECT count(primaryTitle) FROM  title WHERE name LIKE %s", ns))
nam <- paste(n)
assign(nam, cn)
}
#Make dataframe for barplot
df <- data.frame()
#names(df) <- c("Number", "Count")
numbers <- c(One ,Two, Three, Four, Five, Six, Seven, Eight, Nine)
for (i in 1:9){
de <- data.frame(numbername[i],numbers[i])
names(de) <- c("Number", "Count")
df <- rbind(df, de)
}
#Plot graphs
library("ggplot2")
library("plyr")
ggplot(data=df, aes(x=Number,y=Count)) + geom_bar(stat="identity")
ggsave(filename = "C:/Users/Emiel/Git/BigMovieHer/MovieBuffBot/tmp/numbersTitles.jpeg")
#install.packages("RMySQL")
#install.packages("plotrix")
#Wat is de verdeling van de verschillende soorten beroepen die met films te maken hebben? Laat dit zien in een pie chart
#"Welke beroepen zijn er in de film business?"
library(RMySQL)
library(ggplot2)
library(ggrepel)
library(scales)
library(plotly)
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
professionCount <- dbGetQuery("SELECT profession, count(profession) FROM bigmovieher.name_profession WHERE profession NOT LIKE \"\" GROUP BY profession HAVING count(profession) > 2 ORDER BY count(profession) desc")
#get the names and slices as a separate variable
lbls <- professionCount[,2]
slices <- professionCount[,1]
bp <- ggplot(professionCount, aes(x="", y=slices, fill=lbls)) + geom_bar(width = 1, stat = "identity") + ggtitle("Professions in the movie business")
pie <- bp + coord_polar("y", start = 0)
png(filename = "C:/Users/Emiel/Git/BigMovieHer/MovieBuffBot/tmp/professionPie.png")
pie + geom_bar(stat = "identity", color = 'black') + guides(fill=guide_legend(override.aes = list(colour=NA)))
dev.off()
#install.packages("RMySQL")
#install.packages("plotrix")
#Wat is de verdeling van de verschillende soorten beroepen die met films te maken hebben? Laat dit zien in een pie chart
#"Welke beroepen zijn er in de film business?"
library(RMySQL)
library(ggplot2)
library(ggrepel)
library(scales)
library(plotly)
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
professionCount <- dbGetQuery("SELECT profession, count(profession) FROM bigmovieher.name_profession WHERE profession NOT LIKE \"\" GROUP BY profession HAVING count(profession) > 2 ORDER BY count(profession) desc")
#get the names and slices as a separate variable
lbls <- professionCount[,2]
slices <- professionCount[,1]
bp <- ggplot(professionCount, aes(x="", y=slices, fill=lbls)) + geom_bar(width = 1, stat = "identity") + ggtitle("Professions in the movie business")
pie <- bp + coord_polar("y", start = 0)
png(filename = "C://Users//Emiel//Git//BigMovieHer//MovieBuffBot//tmp//professionPie.png")
pie + geom_bar(stat = "identity", color = 'black') + guides(fill=guide_legend(override.aes = list(colour=NA)))
dev.off()
#install.packages("RMySQL")
#install.packages("plotrix")
#Wat is de verdeling van de verschillende soorten beroepen die met films te maken hebben? Laat dit zien in een pie chart
#"Welke beroepen zijn er in de film business?"
library(RMySQL)
library(ggplot2)
library(ggrepel)
library(scales)
library(plotly)
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
professionCount <- dbGetQuery("SELECT profession, count(profession) FROM bigmovieher.name_profession WHERE profession NOT LIKE \"\" GROUP BY profession HAVING count(profession) > 2 ORDER BY count(profession) desc")
#get the names and slices as a separate variable
lbls <- professionCount[,2]
slices <- professionCount[,1]
bp <- ggplot(professionCount, aes(x="", y=slices, fill=lbls)) + geom_bar(width = 1, stat = "identity") + ggtitle("Professions in the movie business")
pie <- bp + coord_polar("y", start = 0)
png(file = "C://Users//Emiel//Git//BigMovieHer//MovieBuffBot//tmp//professionPie.png")
pie + geom_bar(stat = "identity", color = 'black') + guides(fill=guide_legend(override.aes = list(colour=NA)))
dev.off()
#install.packages("RMySQL")
#install.packages("plotrix")
#Wat is de verdeling van de verschillende soorten beroepen die met films te maken hebben? Laat dit zien in een pie chart
#"Welke beroepen zijn er in de film business?"
library(RMySQL)
library(ggplot2)
library(ggrepel)
library(scales)
library(plotly)
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
professionCount <- dbGetQuery("SELECT profession, count(profession) FROM bigmovieher.name_profession WHERE profession NOT LIKE \"\" GROUP BY profession HAVING count(profession) > 2 ORDER BY count(profession) desc")
#get the names and slices as a separate variable
lbls <- professionCount[,2]
slices <- professionCount[,1]
bp <- ggplot(professionCount, aes(x="", y=slices, fill=lbls)) + geom_bar(width = 1, stat = "identity") + ggtitle("Professions in the movie business")
pie <- bp + coord_polar("y", start = 0)
jpeg(file = "C://Users//Emiel//Git//BigMovieHer//MovieBuffBot//tmp//professionPie.jpeg")
pie + geom_bar(stat = "identity", color = 'black') + guides(fill=guide_legend(override.aes = list(colour=NA)))
dev.off()
#install.packages("RMySQL")
#install.packages("plotrix")
#Wat is de verdeling van de verschillende soorten beroepen die met films te maken hebben? Laat dit zien in een pie chart
#"Welke beroepen zijn er in de film business?"
library(RMySQL)
library(ggplot2)
library(ggrepel)
library(scales)
library(plotly)
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
professionCount <- dbGetQuery("SELECT profession, count(profession) FROM bigmovieher.name_profession WHERE profession NOT LIKE \"\" GROUP BY profession HAVING count(profession) > 2 ORDER BY count(profession) desc")
#get the names and slices as a separate variable
lbls <- professionCount[,2]
slices <- professionCount[,1]
bp <- ggplot(professionCount, aes(x="", y=slices, fill=lbls)) + geom_bar(width = 1, stat = "identity") + ggtitle("Professions in the movie business")
pie <- bp + coord_polar("y", start = 0)
png(filename = "professionPie.png")
pie + geom_bar(stat = "identity", color = 'black') + guides(fill=guide_legend(override.aes = list(colour=NA)))
dev.off()
#install.packages("RMySQL")
#install.packages("plotrix")
#Wat is de verdeling van de verschillende soorten beroepen die met films te maken hebben? Laat dit zien in een pie chart
#"Welke beroepen zijn er in de film business?"
library(RMySQL)
library(ggplot2)
library(ggrepel)
library(scales)
library(plotly)
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
professionCount <- dbGetQuery("SELECT profession, count(profession) FROM bigmovieher.name_profession WHERE profession NOT LIKE \"\" GROUP BY profession HAVING count(profession) > 2 ORDER BY count(profession) desc")
#get the names and slices as a separate variable
lbls <- professionCount[,2]
slices <- professionCount[,1]
bp <- ggplot(professionCount, aes(x="", y=slices, fill=lbls)) + geom_bar(width = 1, stat = "identity") + ggtitle("Professions in the movie business")
pie <- bp + coord_polar("y", start = 0)
png(filename = "professionPie.png")
pie + geom_bar(stat = "identity", color = 'black') + guides(fill=guide_legend(override.aes = list(colour=NA)))
dev.off()
#install.packages("RMySQL")
#install.packages("plotrix")
#Wat is de verdeling van de verschillende soorten beroepen die met films te maken hebben? Laat dit zien in een pie chart
#"Welke beroepen zijn er in de film business?"
library(RMySQL)
library(ggplot2)
library(ggrepel)
library(scales)
library(plotly)
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
professionCount <- dbGetQuery("SELECT profession, count(profession) FROM bigmovieher.name_profession WHERE profession NOT LIKE \"\" GROUP BY profession HAVING count(profession) > 2 ORDER BY count(profession) desc")
#get the names and slices as a separate variable
lbls <- professionCount[,2]
slices <- professionCount[,1]
bp <- ggplot(professionCount, aes(x="", y=slices, fill=lbls)) + geom_bar(width = 1, stat = "identity") + ggtitle("Professions in the movie business")
pie <- bp + coord_polar("y", start = 0)
png(filename = "professionPie.png")
pie + geom_bar(stat = "identity", color = 'black') + guides(fill=guide_legend(override.aes = list(colour=NA)))
dev.off()
getwd()
#install.packages("RMySQL")
#install.packages("plotrix")
#Wat is de verdeling van de verschillende soorten beroepen die met films te maken hebben? Laat dit zien in een pie chart
#"Welke beroepen zijn er in de film business?"
library(RMySQL)
library(ggplot2)
library(ggrepel)
library(scales)
library(plotly)
setwd("C:\\Users\Emiel\\Git\\BigMovieHer\\MovieBuffBot\\resources\\tmp")
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
professionCount <- dbGetQuery("SELECT profession, count(profession) FROM bigmovieher.name_profession WHERE profession NOT LIKE \"\" GROUP BY profession HAVING count(profession) > 2 ORDER BY count(profession) desc")
#get the names and slices as a separate variable
lbls <- professionCount[,2]
slices <- professionCount[,1]
bp <- ggplot(professionCount, aes(x="", y=slices, fill=lbls)) + geom_bar(width = 1, stat = "identity") + ggtitle("Professions in the movie business")
pie <- bp + coord_polar("y", start = 0)
png(filename = "professionPie.png")
pie + geom_bar(stat = "identity", color = 'black') + guides(fill=guide_legend(override.aes = list(colour=NA)))
dev.off()
#install.packages("RMySQL")
#install.packages("plotrix")
#Wat is de verdeling van de verschillende soorten beroepen die met films te maken hebben? Laat dit zien in een pie chart
#"Welke beroepen zijn er in de film business?"
library(RMySQL)
library(ggplot2)
library(ggrepel)
library(scales)
library(plotly)
setwd("C:\\Users\Emiel\\Git\\BigMovieHer\\MovieBuffBot\\resources\\tmp")
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
professionCount <- dbGetQuery("SELECT profession, count(profession) FROM bigmovieher.name_profession WHERE profession NOT LIKE \"\" GROUP BY profession HAVING count(profession) > 2 ORDER BY count(profession) desc")
#get the names and slices as a separate variable
lbls <- professionCount[,2]
slices <- professionCount[,1]
bp <- ggplot(professionCount, aes(x="", y=slices, fill=lbls)) + geom_bar(width = 1, stat = "identity") + ggtitle("Professions in the movie business")
pie <- bp + coord_polar("y", start = 0)
png(filename = "professionPie.png")
pie + geom_bar(stat = "identity", color = 'black') + guides(fill=guide_legend(override.aes = list(colour=NA)))
dev.off()
#install.packages("RMySQL")
#install.packages("plotrix")
#Wat is de verdeling van de verschillende soorten beroepen die met films te maken hebben? Laat dit zien in een pie chart
#"Welke beroepen zijn er in de film business?"
library(RMySQL)
library(ggplot2)
library(ggrepel)
library(scales)
library(plotly)
setwd("C://Users//Emiel//Git//BigMovieHer//MovieBuffBot//resources//tmp")
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
professionCount <- dbGetQuery("SELECT profession, count(profession) FROM bigmovieher.name_profession WHERE profession NOT LIKE \"\" GROUP BY profession HAVING count(profession) > 2 ORDER BY count(profession) desc")
#get the names and slices as a separate variable
lbls <- professionCount[,2]
slices <- professionCount[,1]
bp <- ggplot(professionCount, aes(x="", y=slices, fill=lbls)) + geom_bar(width = 1, stat = "identity") + ggtitle("Professions in the movie business")
pie <- bp + coord_polar("y", start = 0)
png(filename = "professionPie.png")
pie + geom_bar(stat = "identity", color = 'black') + guides(fill=guide_legend(override.aes = list(colour=NA)))
dev.off()
# install.packages("stringr")
# install.packages("ggplot2")
library(RMySQL)
library(ggplot2)
setwd("C://Users//Emiel//Git//BigMovieHer//MovieBuffBot//resources//tmp")
con <- dbConnect(MySQL(), dbname="bigmovieher", user="root", password="", host="localhost")
b <- "'% "
e <- " %'"
numbername <- c("One","Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine")
#Add values of query to name
for (n in c("One","Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine" )){
ns <- paste0(b, n, e)
cn <- dbGetQuery(con, sprintf("SELECT count(primaryTitle) FROM  title WHERE name LIKE %s", ns))
nam <- paste(n)
assign(nam, cn)
}
#Make dataframe for barplot
df <- data.frame()
#names(df) <- c("Number", "Count")
numbers <- c(One ,Two, Three, Four, Five, Six, Seven, Eight, Nine)
for (i in 1:9){
de <- data.frame(numbername[i],numbers[i])
names(de) <- c("Number", "Count")
df <- rbind(df, de)
}
#Plot graphs
library("ggplot2")
library("plyr")
ggplot(data=df, aes(x=Number,y=Count)) + geom_bar(stat="identity")
ggsave(filename = "numberTitles.jpeg")
